#!/bin/bash

#getnewip v1

###--->
##START OF SETUP CONFIG

#hostname of local device ## 192.168.1.xx
localReferenceDevice=''
#local ports to test ## 22, 80, 443, etc...
localTestPort1=''
localTestPort2=''
#server to ping ## 8.8.8.8
pingServer=''
#.ssh/config host ## hso
SSHcfgHost=''
#looped ## not looped by default, otherwise
isLooped=0
#install new ip without checking if home
fetchIPNoCheck=0
#Scripts folder (ie: $HOME/.scripts)
scriptsFolder=$HOME/.getnewip
#don't run unless owner is logged in
checkIfUserIsLoggedIn=1
#amount of time between loops (in seconds)
loopDelayTime=3600
#dropbox stuff
dropbox_folder=''
purpose=''
##END OF SETUP CONFIG
### <---

#check if script is configured
if [ $localReferenceDevice = "" ] && [ $localTestPort1 = "" ] && [ $localTestPort2 = "" ]  && [ $pingServer = "" ]  && [ $SSHcfgHost = "" ] && [ $dropbox_folder = "" ] && [ $purpose = "" ]
then
	echo "Script not configured. Please run './install.sh'."
	exit
fi

option=$1

case "$option" in
	"-n")
	#no loop.
	isLooped=0
	fetchIPNoCheck=1
	echo "> Running single check."
	;;

	"-s")
	#service mode, run as loop
	isLooped=1
	fechIPNoCheck=0
	echo "> Running in service mode."
	;;

	"-i")
	#display last downloaded IP
	echo "> Last IP downloaded is $(cat $scriptsFolder/currentip-$purpose.txt)"
	exit
	;;

	* | "-h")
	echo "-- Help Menu --

	Running Modes:
		-n to not loop.
		-s to run in service mode, looping.
		-i to get last IP downloaded.

	-h for this menu."
	exit
esac

#create scripts folder if it doesn't exist
if [ ! -d $scriptsFolder ]
then
	echo "> '$scriptsFolder' doesn't exist. I'll make it."
	if mkdir $scriptsFolder
	then
		echo "> Done."
	fi
fi

function main() {
#main funtion that runs

#check if user is logged in
if [ $checkIfUserIsLoggedIn = 1 ]
then
	while true
	do
		for o in $(ls /home | awk '{print $1}')
		do
			if [ ! $(who | awk '{print $1}') = $o ] || [ ! $(whoami) = $o ] || [ ! -d $scriptsFolder ]
			then
				echo "> No user logged in, trying again in 5s..."
				sleep 5s
				main
			else
				break 2
			fi
		done
	done
fi

#install dropbox uploader if it's missing
if [ ! -f $HOME/.dropbox_uploader ]
then
	echo "> dropbox_uploader config not found; Not setup, available, or installed. Download a copy? [y/n]"
	read DlDBU

	if [ $DlDBU = y ]
	then
		downloadDropboxUploader
		echo "> Please remember to setup dropbox_uploader."
		exit

	elif [ $DlDBU = n ]
	then
		echo "> Exiting."
		exit
	fi
fi

cd $scriptsFolder

echo ">> Date: $(date)."

if [ $fetchIPNoCheck = 0 ]
then
	internetTest

elif [ $fetchIPNoCheck = 1 ]
then
	IPfromDB
fi

}

function internetTest() {
#test internet
if ping -q -c 1 -W 1 $pingServer > /dev/null
then
  	#if internet is up
	echo "> Internet is connected, continuing."
	checkIfNotHome
else
  	#if internet is down
	echo "> No internet, continuing."
fi
}

function checkIfNotHome() {
#check if connection is external from server
echo "> Checking if home."

#currentIP=$(ifconfig | grep inet | head -n 1 | awk '{print $2}')
currentIP=$(hostname -i | awk '{print $1}')
checklTP1=$(nc -zv $localReferenceDevice $localTestPort1) #80
exStat1=$?
checklTP2=$(nc -zv $localReferenceDevice $localTestPort2) #22
exStat2=$?

if [ "$exStat1" = 0 ] && [ "$exStat2" = 0 ]
then
	echo "> $localTestPort1 and $localTestPort2 are both open. $USER is at $purpose."
else
	IPfromDB
fi

}

function IPfromDB() {
#download current IP from dropbox
if [ -f "dropbox_uploader.sh" ]
then
	if ! $scriptsFolder/dropbox_uploader.sh > /dev/null
	then
		chmod +x $scriptsFolder/dropbox_uploader.sh
	fi

	echo "> Downloading copy of IP from dropbox."
	$scriptsFolder/dropbox_uploader.sh download $dropbox_folder/currentip-$purpose.txt
	sizeOfCIP=$(cat currentip-$purpose.txt)

	if [ -f currentip-$purpose.txt ] && [ ! $sizeOfCIP = "" ]
	then
		echo "> Downloaded IP successfully."
		modifySSHConfig
	else
		echo "> Download Failed. Retrying."
		IPfromDB
	fi
else
	echo "> Can't find dropbox_uploader.sh..."
	echo "> Downloading dropbox_uploader.sh..."
	downloadDropboxUploader
	echo "> Rerunning."
	IPfromDB
fi

}

function modifySSHConfig() {
#change .ssh/config
findPlaceNum=$(cat ~/.ssh/config | grep -n $SSHcfgHost | cut -d':' -f1)
PlaceNum=$(($findPlaceNum + 1))
oldIPnum=$(cat ~/.ssh/config | head -n $PlaceNum | tail -n 1 | awk '{print $2}')
newIPnum=$(cat currentip-$purpose.txt)

if [ ! $oldIPnum = $newIPnum ]
then
	echo "> Changing IP from $oldIPnum to $newIPnum in config"
	sed -i -e "s/$oldIPnum/$newIPnum/g" ~/.ssh/config
	echo "> Done"
else
	echo "> IP hasn't changed from '$oldIPnum', doing nothing."
fi

}

function downloadDropboxUploader() {
#simple download of dropbox_uploader

if curl "https://raw.githubusercontent.com/andreafabrizi/Dropbox-Uploader/master/dropbox_uploader.sh" -o $scriptsFolder/dropbox_uploader.sh > /dev/null
then
	echo "> Download Complete."
else
	echo "> Download Failed."
	downloadDropboxUploader
fi

chmod +x $scriptsFolder/dropbox_uploader.sh

}

if [ $isLooped = 1 ]
then
	while true
	do
		main
		sleep $loopDelayTime$(echo s)
	done
else
	main
fi
